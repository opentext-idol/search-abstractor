{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.badgesSection" . }}

Provides an IDOL setup for Retrieval-augmented generation (RAG)

{{ template "chart.homepageLine" . }}

{{ template "chart.maintainersSection" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

### Licensing

You must have a valid [IDOL LicenseServer](https://www.microfocus.com/documentation/idol/IDOL_24_3/LicenseServer_24.3_Documentation/Help/Content/Introduction/Introduction.htm) running to license the IDOL services. 

To allow the services to communicate with the LicenseServer, use one of the following options:

- Configure and install the [idol-licenseserver](https://github.com/opentext-idol/idol-containers-toolkit/tree/main/helm/idol-licenseserver) chart
 (which provides an idol-licenseserver Kubernetes service that proxies to your actual LicenseServer instance)
- Set the `licenseServerHostname` value in each of the subchart values, for example `--set content.licenseServerHostname=my.license.server.instance`

### Pull Secrets

To pull the container images from the `microfocusidolserver` repository, you need a preexisting `kubernetes.io/dockerconfigjson` Secret with your credentials.

You can create an appropriate secret (for example called `dockerhub-secret`) by using the following command:

```bash
kubectl create secret docker-registry dockerhub-secret --docker-server=https://index.docker.io/v1/ --docker-username=microfocusidolreadonly --docker-password=<your-apikey>
```

For more details, see the [Kubernetes documentation](https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/#create-a-secret-by-providing-credentials-on-the-command-line).

## Installation

To install the chart with the release name `my-release`, using customized [values](#values) from `my-values.yaml`, use the following command: 

```bash
# Add this repository as 'idol-search-abstractor' (can change this name)
helm repo add idol-search-abstractor https://raw.githubusercontent.com/opentext-idol/search-abstractor/main/helm

# Actually install the chart
helm install -f my-values.yaml my-release idol-search-abstractor/{{ template "chart.name" . }}
```

## Architecture Diagram

The following diagram shows the relationships between the Deployments/StatefulSets provisioned by the chart.

```mermaid
flowchart TB
  direction TB
  subgraph "UI (Externally provisioned)"
    direction TB
    ui(["  ui  "])
  end
  subgraph Frontend
    direction LR
    api[saapi-api-service]
    auth[[auth]]
  end
  subgraph Backend
    idol-nifi[[idol-nifi]]
    idol-view
    subgraph Document Security
      direction LR
      idol-community
      idol-omnigroupserver[[idol-omnigroupserver]]
    end
    subgraph Search/Ask
      idol-answerserver
      idol-qms
      idol-content[[idol-content]]
    end
  end
  subgraph "LLM (Externally provisioned)"
    llm([llm])
  end

ui --> api
ui --> auth
api --> auth
api ---> idol-nifi
api --> idol-community
idol-community --> idol-omnigroupserver
idol-nifi --> idol-omnigroupserver
idol-nifi --> idol-qms
idol-nifi --> idol-answerserver
idol-nifi --> idol-view
idol-qms --> idol-content
idol-answerserver --> idol-content
idol-answerserver ---> llm
```

{{ template "chart.valuesHeader" . }}

 > For more detailed configuration, refer to the documentation for each of the subcharts (links provided in the values table below).

{{ template "chart.valuesTable" . }}

{{ template "helm-docs.versionFooter" . }}
