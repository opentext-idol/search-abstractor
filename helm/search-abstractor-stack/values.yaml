#
# Copyright 2024-2025 Open Text.
#
# The only warranties for products and services of Open Text and its
# affiliates and licensors ("Open Text") are as may be set forth in the
# express warranty statements accompanying such products and services.
# Nothing herein should be construed as constituting an additional
# warranty. Open Text shall not be liable for technical or editorial
# errors or omissions contained herein. The information contained herein
# is subject to change without notice.
#
# Except as specifically indicated otherwise, this document contains
# confidential information and a valid license is required for possession,
# use or copying. If this work is provided to the U.S. Government,
# consistent with FAR 12.211 and 12.212, Commercial Computer Software,
# Computer Software Documentation, and Technical Data for Commercial Items
# are licensed to the U.S. Government under vendor's standard commercial
# license.
#

global:
  # -- Global secrets used to pull container images
  # @section -- Global Values
  imagePullSecrets:
  - "dockerhub-secret"
  # -- Global override value for idolImage.version
  # @section -- Global Values
  idolVersion: &idolVersion "25.1"

aes:
  # -- Value used to generate a shared AES256 key for securityinfo
  key: search-abstractor
  # @ignored DRY definitions
  common:
    volume: &x-aes-key-volume
      name: aes-key-files
      configMap:
        name: search-abstractor-security-aes-key
    volumeMount: &x-aes-key-volumeMount
      name: aes-key-files
      subPath: aes.keyfile

# -- `content` subchart values (see https://github.com/opentext-idol/idol-containers-toolkit/tree/main/helm/single-content#values)
# @default -- default configuration for search-abstractor content
content:
  # -- Whether to deploy a content component
  enabled: true
  name: idol-content
  queryserviceACIPort: &queryserviceACIPort "9100"
  existingConfigMap: search-abstractor-content-deployment-cfg
  cfg:
    # -- Additional Content field processing configuration data
    # @default -- ""
    fieldprocessing: |-
      // add additional Content field setup here (appended to [FieldProcessing] section)
    # -- Additional Content security configuration data
    # @default -- ""
    security: |-
      // add additional Content security setup here (appended to [Security] section)
  additionalVolumes:
  - <<: *x-aes-key-volume  
  additionalVolumeMounts:
  - <<: *x-aes-key-volumeMount
    mountPath: /opt/idol/content/index/aes.keyfile

# -- `distributed-idol` subchart values (see https://github.com/opentext-idol/idol-containers-toolkit/tree/main/helm/distributed-idol#values)
# @default -- default configuration for search-abstractor distributed-idol
distributedidol:
  # -- Whether to deploy a distributed-idol component (either this or content should be enabled, but not both)
  enabled: false
  name: distributed-idol
  content:
    name: idol-content
    existingConfigMap: search-abstractor-content-deployment-cfg
    initialEngineCount: "3"
    aciPort: "9100"
    indexPort: "9101"
    servicePort: "9102"
    additionalVolumes:
    - <<: *x-aes-key-volume
    additionalVolumeMounts:
    - <<: *x-aes-key-volumeMount
      mountPath: /opt/idol/content/index/aes.keyfile
  dah:
    name: idol-dah
    existingConfigMap: search-abstractor-distributed-idol-dah-deployment-cfg
    aciPort: *queryserviceACIPort
    servicePort: "9102"
  dih:
    name: idol-dih
    existingConfigMap: search-abstractor-distributed-idol-dih-deployment-cfg
    aciPort: "9070"
    servicePort: "9072"

# -- `answerserver` subchart values (see https://github.com/opentext-idol/idol-containers-toolkit/tree/main/helm/idol-answerserver#values)
# @default -- default configuration for search-abstractor answerserver
answerserver:
  # -- Whether to deploy an Answer Server component
  enabled: true
  single-content:
    enabled: false
  existingConfigMap: search-abstractor-answerserver-deployment-cfg
  additionalVolumes:
  - name: idol-answerserver-scripts
    configMap:
      name: idol-answerserver-scripts
  - name: search-abstractor-answerserver-deployment-resources-cfg
    configMap:
      name: search-abstractor-answerserver-deployment-resources-cfg
  additionalVolumeMounts:
  - name: idol-answerserver-scripts
    mountPath: /answerserver/prestart_scripts/00_config.sh
    subPath: config.sh
  - name: search-abstractor-answerserver-deployment-resources-cfg
    mountPath: /answerserver/resources/llmdata
  envConfigMap: search-abstractor-answerserver-deployment-env-cfg

# -- `qms` subchart values (see https://github.com/opentext-idol/idol-containers-toolkit/tree/main/helm/idol-qms#values)
# @default -- default configuration for search-abstractor qms
qms:
  # -- Whether to deploy a QMS component
  enabled: true
  singleAgentstore:
    enabled: false
  single-content:
    enabled: false
  existingConfigMap: search-abstractor-qms-deployment-cfg
  additionalVolumes:
  - name: poststart
    configMap:
      name: idol-qms-poststart
  additionalVolumeMounts:
  - name: poststart
    mountPath: /qms/poststart_scripts

# -- `view` subchart values (see https://github.com/opentext-idol/idol-containers-toolkit/tree/main/helm/idol-view#values)
# @default -- default configuration for search-abstractor view
view:
  # -- Whether to deploy a View component
  enabled: true
  queryserviceACIPort: *queryserviceACIPort

# -- `omnigroupserver` subchart values (see https://github.com/opentext-idol/idol-containers-toolkit/tree/main/helm/idol-omnigroupserver#values)
# @default -- default configuration for search-abstractor omnigroupserver
ogs:
  # -- Whether to deploy an OmniGroupServer component
  enabled: true
  existingConfigMap: search-abstractor-ogs-deployment-cfg
  cfg:
    # -- additional omingroupserver repositories configuration data
    # @default -- ""
    repositories: |-
      // add your OmniGroupServer repo setup here (appended to [Repositories] section)

# -- `community` subchart values (see https://github.com/opentext-idol/idol-containers-toolkit/tree/main/helm/idol-community#values)
# @default -- default configuration for search-abstractor community
community:
  # -- Whether to deploy Community component
  enabled: true
  name: &community-name idol-community
  aciPort: &community-aciport "9030"
  queryserviceACIPort: *queryserviceACIPort
  agentStoreName: "idol-passageextractor-agentstore"
  agentStoreACIPort: "12300"
  existingConfigMap: search-abstractor-community-deployment-cfg
  cfg:
    # -- Additional Community security configuration data  
    security: |-
      0=Autonomy
      // add your community security setup here (appended to [Security] section)
  additionalVolumes:
  - <<: *x-aes-key-volume  
  additionalVolumeMounts:
  - <<: *x-aes-key-volumeMount
    mountPath: /community/cfg/aes.keyfile

# -- `nifi` subchart values (see https://github.com/opentext-idol/idol-containers-toolkit/tree/main/helm/idol-nifi#values)
# @default -- default configuration for search-abstractor nifi
nifi:
  # -- Whether to deploy a NiFi instance
  enabled: true
  idolImage:
    repo: nifi-searchabstractor
  additionalVolumes:
  - name: search-abstractor-nifi-files
    configMap:
      name: search-abstractor-nifi-deployment-files
  additionalVolumeMounts:
  - name: search-abstractor-nifi-files
    mountPath: /opt/nifi/nifi-current/search_abstractor
  nifiRegistry:
    buckets:
    - name: &flowsBucket search-abstractor-flows-bucket
      flowfiles:
      - /opt/nifi/nifi-current/search_abstractor/Query_flow.json
      - /opt/nifi/nifi-current/search_abstractor/Ingest_flow.json
  nifi:
    flows:
    - name: "Search Abstractor Query Flow"
      bucket: *flowsBucket
    - name: "Search Abstractor Ingest Flow"
      bucket: *flowsBucket
    autoScaling:
      enabled: false

# -- `auth` subchart values (see https://github.com/opentext-idol/discover-deploy/tree/refactor/auth/helm/discover-auth#values)
# @default -- default configuration for search-abstractor auth
auth:
  # -- Whether to deploy the `discover-auth` subchart
  enabled: true

  # -- Realm
  realm: discover
  # -- Client to configure and use for API requests
  apiClient: discover_api
  # -- Client credentials to configure and use for API requests
  apiClientSecret: d0e76ad7-7d6b-4d86-be3a-5dfe715dbf87
  # -- Client to configure and use for logging into the UI
  uiClient: discover_ui
  # -- URL to redirect to post authorization
  uiUrls: "http://localhost:4200/*"
  # -- Expiration time in seconds for login tokens
  tokenExpiryTimeSeconds: 600
  # -- Roles to populate in keycloak
  baseRealmRoles: "role1,role2,role3"

# -- PostgreSQL subchart values (see https://github.com/bitnami/charts/tree/main/bitnami/postgresql)
# @default -- default configuration for search-abstractor session api PostgreSQL
saapiPostgresql:
  fullnameOverride: saapi-postgresql
  # -- Whether to deploy the PostgreSQL subchart for the session api service
  enabled: true
  service:
    # -- Port session API PostgreSQL service runs on
    port: 5432
  auth:
    username: postgres
    password: postgres
    database: sessionsdb
  
  primary:
    persistence:
      storageClass: standard
    containerSecurityContext:
      enabled: true
    podSecurityContext:
      enabled: true
    initdb:
      user: postgres
      password: postgres
      scriptsConfigMap: session-api-postgres-cfg-map

sessionapi:
  # -- Deployment name
  name: &saapi-session-name saapi-session-api-service
  # -- Deployment replicas
  replicas: 1
  image:
    # -- The registry value to use to construct the container image name: {registry}/{repo}:{version}
    registry: microfocusidolserver
    # -- The repository value to use to construct the container image name: {registry}/{repo}:{version}
    repo: search-abstractor-session-service
    # -- The version value to use to construct the container image name: {registry}/{repo}:{version}
    version: *idolVersion
    # -- The policy to use to determine whether to pull the specified image (see https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy)
    pullPolicy: Always
  service:
    # -- Session service name
    name: *saapi-session-name
    # -- Port that the session service runs on
    port: 8080
  licensor:
    # -- Session licensor name
    name: idol-answerserver
    # -- Port session licensor runs on
    port: 12000
  # -- `configmap` name
  config: session-api-config
  ingress:
    # -- Whether to create an ingress resource
    enabled: false
    # -- Ingress controller path exposing session API
    path: /session-api/
    # -- Optional ingress host (see https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules).
    host: ""
    # -- Optional parameter to override the default ingress class
    className: ""
  storage:
    # -- Database name used for api-service storage
    dbName: resourcesdb

saapi:
  # -- Deployment name
  name: &saapi-name saapi-api-service
  # -- Deployment replicas
  replicas: 1
  image:
    # -- The registry value to use to construct the container image name: {registry}/{repo}:{version}
    registry: microfocusidolserver
    # -- The repository value to use to construct the container image name: {registry}/{repo}:{version}
    repo: search-abstractor-api-service
    # -- The version value to use to construct the container image name: {registry}/{repo}:{version}
    version: *idolVersion
     # -- The policy to use to determine whether to pull the specified image (see https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy)
    pullPolicy: Always
  # -- CORS origin values
  allowedOrigins: "http://localhost:8080"
  # -- Cache duration, in seconds, for document images and subfiles
  httpCacheMaxAge: 3600
  # -- Hostname for Community component
  backendIdolHost: *community-name
  # -- ACI port for Community component
  backendIdolPort: *community-aciport
  # -- hostname for content component
  backendIdolContentHost: idol-query-service
  # -- aci port for content component
  backendIdolContentPort: *queryserviceACIPort
  backendApi:
    # -- Host/service name
    name: search-abstractor-api
    # -- Port
    port: 8085
    ingress:
      # -- Whether to create a backend API ingress resource
      enabled: false
      # -- Optional host (see https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules).
      host: ""
      # -- Optional parameter to override the default ingress class
      className: ""
  storage:
    # -- Database name used for api-service storage
    dbName: resourcesdb
    # -- Maximum size for a single uploaded file
    maxFileSize: 10MB
    # -- Maximum total size for a request
    maxRequestSize: 10MB

  vllm:
    # -- vllm endpoint to use for llm access
    endpoint: http://vllm-endpoint:8000/v1/completions
    # -- vllm chat endpoint to use for llm access
    chatEndpoint: http://vllm-endpoint:8000/v1/chat/completions
    # -- The LLM to use
    model: mistralai/Mistral-7B-Instruct-v0.2
    # -- The LLM revision to use (branch, tag, or commitid)
    modelRevision: "9925900"
    # -- HuggingFace token to access the model/tokenizer to use for the RAG answer system
    HFToken: &hf-token ""
    # -- The LLaVa model to use
    llavaModel: "llava-hf/llava-v1.6-mistral-7b-hf"
    # -- The base path of the OpenAI endpoint to use for LLaVa model access
    llavaEndpointBase: "http://openai-llava-server:8000/v1/"
    # -- The OpenAI API key to use for the endpoint
    openAiApiKey: "My API Key"
  # -- `configmap` name
  config: api-config
  # -- Secret name for auth credentials
  secret: api-secret
  ingress:
    # -- Ingress controller path exposing API (should end with /)
    path: /api/
    # -- Optional ingress host (see https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules).
    host: ""
    # -- Port ingress service runs on
    port: 12080
    # -- Optional parameter to override the default ingress class
    className: ""

  service:
    # -- Service name
    name: *saapi-name
    # -- Port service runs on
    port: 8080

# -- VLLM subchart values (see https://github.com/substratusai/helm/blob/main/charts/vllm/README.md) - not enabled by default
# @default -- default configuration for search-abstractor VLLM deployment
vllmdeployment:
  enabled: false
  nameOverride: vllm-deployment-sa
  fullnameOverride: vllm-deployment-sa
  model: mistralai/Mistral-7B-Instruct-v0.2
  runtimeClassName: nvidia
  gpuMemoryUtilization: 0.40
  image:
    tag: v0.5.0
  ingress:
    enabled: true
    hosts:
    - host: ""
      paths:
        - path: /
          pathType: ImplementationSpecific
  env:
    - name: HF_TOKEN
      value: *hf-token
  resources:
    limits:
      nvidia.com/gpu: 1

# -- VLLM subchart values (see https://github.com/substratusai/helm/blob/main/charts/vllm/README.md) - not enabled by default
# @default -- default configuration for search-abstractor Llava deployment
llavadeployment:
  enabled: false
  nameOverride: llava-deployment-sa
  fullnameOverride: llava-deployment-sa
  model: llava-hf/llava-v1.6-mistral-7b-hf
  runtimeClassName: nvidia
  gpuMemoryUtilization: 0.40
  image:
    tag: v0.5.0
  ingress:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: 64m
    hosts:
    - host: ""
      paths:
        - path: /
          pathType: ImplementationSpecific
  env:
    - name: HF_TOKEN
      value: *hf-token
    - name: EXTRA_ARGS
      value: --image-input-type pixel_values --image-token-id 32000 --image-input-shape 1,3,336,336 --image-feature-size 1176 --max-model-len 21000
  resources:
    limits:
      nvidia.com/gpu: 1
